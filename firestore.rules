rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Users can read and write their own transactions
    match /users/{userId}/transactions/{transactionId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Groups - users can read/write if they are members
    match /groups/{groupId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.userIds;
      
      // Allow creating new groups
      allow create: if request.auth != null && 
        request.auth.uid in request.resource.data.userIds;
    }
    
    // Group transactions - users can read/write if they are group members
    match /groups/{groupId}/transactions/{transactionId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/groups/$(groupId)) &&
        request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.userIds;
    }
    
    // Group categories - users can read/write if they are group members
    match /groups/{groupId}/categories/{categoryId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/groups/$(groupId)) &&
        request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.userIds;
    }
    
    // Pair codes - users can create their own codes and read any code for validation
    match /pairCodes/{codeId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.generatedBy;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.generatedBy;
    }
  }
} 